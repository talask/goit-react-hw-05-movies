{"version":3,"file":"static/js/183.c06590ad.chunk.js","mappings":"wMAEaA,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACMF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SACKI,GAAgBC,KAFhBF,EADA,KAYxB,C,2LCGcM,GAnBgBC,EAAAA,GAAAA,IAAH,meAmBGA,EAAAA,GAAAA,OAAH,2c,SCVtBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4NAWRG,GAAkBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,iSAgBjBK,EAAgB,CAClBC,MAAO,IAGLC,EAASC,EAAAA,KAAaC,MAAM,CAC9BH,MAAOE,EAAAA,KAAaE,aAGXC,EAAY,SAAC,GAAsB,EAArBC,MAAsB,IAAfC,EAAc,EAAdA,SAE9B,OAEI,0BACI,SAAC,KAAD,CACIR,cAAiBA,EACjBS,iBAAoBP,EACpBM,SAAY,SAACE,GACTF,EAASE,EAAOT,MAEnB,EANL,UAQI,UAACL,EAAD,YACI,SAACE,EAAD,CACIa,KAAK,OACLrB,KAAK,QAELsB,YAAY,kBAIhB,SAAClB,EAAD,CAAeiB,KAAK,SAApB,UACI,SAAC,MAAD,CAAUE,KAAK,YAEnB,SAAC,KAAD,CAAcvB,KAAK,SAASwB,UAAU,cAOzD,E,wCCPD,EA5De,WAAO,IAAD,EAEjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO/B,EAAP,KAAegC,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAG/CC,EAAAA,EAAAA,YAAW,WAEP,IAAMC,EAAc,mCAAG,oGAGnBT,GAAa,GACbE,EAAS,MAJU,UAMAQ,EAAAA,EAAAA,GAAU,SAAU,GAAX,gBAAwBJ,EAAxB,MANT,YAMbK,EANa,yBASfb,EAAUa,EAAKC,SATA,4GAanBV,EAAS,KAAMW,SACfC,QAAQC,IAAR,MAdmB,yBAgBnBf,GAAa,GAhBM,6EAAH,qDAqBrBM,EAAUU,OAAS,GAClBP,GAGP,GAAE,CAACH,IAWA,OACG,0BACK,UAAC,KAAD,YACI,SAAClB,EAAD,CAAWC,MAAOiB,EAAWhB,SAV5B,SAACP,GAGdsB,EAD6B,KAAVtB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAGhD,IAMcjB,EAAOkD,OAAS,IAAK,SAACnD,EAAA,EAAD,CAAWC,OAAQA,IACxCiC,IAAa,SAACkB,EAAA,EAAD,IACbhB,IAAS,uBAAIA,QAK7B,C,kGCnEKiB,EAAU,2CAEVC,EAAM,gCACNC,EAAU,CACZC,KAAM,mBACNC,MAAO,SACPC,OAAQ,gBAICb,EAAS,mCAAG,WAAOc,GAAP,8FAAYC,EAAZ,+BAAkB,GAAI1C,EAAtB,+BAA4B,GAA5B,SACE2C,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAmBC,EAAQI,IAA3B,OAAkCC,EAAlC,YAA2C1C,GAA3C,OAAmDmC,IADrD,cACfS,EADe,yBAGdA,EAAShB,MAHK,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/Movies/Movies.jsx","components/MoviessAPI/MoviesAPI.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n            { movies.map(({ id, title, name }) => (\n                <li key={id} >\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                        {title ? title : name}\n                    </Link>\n                       \n                   \n                </li>\n            ))\n            }\n        </ul>\n    )\n}","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.div`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  `;\n\n  export const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    // background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        opacity: 1;\n      }\n  `;","import PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { FiSearch } from 'react-icons/fi';\nimport {  SearchFormBtn } from './Searchbar.styled';\nimport styled from 'styled-components';\n\n\n//import { MovieList } from '../MovieList/MovieList'\n\n\nconst SearchForm = styled(Form)`\n    display: flex;\n    align-items: center;\n    width: 350px;\n    max-width: 600px;\n    background-color: #fff;\n    border: 1px solid #eee;\n    border-radius: 3px;\n    overflow: hidden;\n  `;\n\n  const SearchFormInput = styled(Field)`\n    display: inline-block;\n    width: 350px;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n    &input::placeholder {\n        font: inherit;\n        font-size: 18px;\n      }\n`;\n\nconst initialValues = {\n    query: '',\n};\n\nconst schema = yup.object().shape({\n    query: yup.string().required(),\n});\n\nexport const Searchbar = ({value, onSubmit}) => {\n          \n    return (\n                  \n        <div>\n            <Formik\n                initialValues = {initialValues}\n                validationSchema = {schema}\n                onSubmit = {(values) => {\n                    onSubmit(values.query);\n                    //resetForm();\n                }}\n            >\n                <SearchForm>\n                    <SearchFormInput\n                        type=\"text\"\n                        name=\"query\"\n                        \n                        placeholder=\"Search movie\"\n                        \n                    />\n\n                    <SearchFormBtn type=\"submit\">\n                        <FiSearch size=\"16px\"/>\n                    </SearchFormBtn>\n                    <ErrorMessage name='search' component=\"div\" />\n                </SearchForm>\n            </Formik>\n        </div>\n\n        )\n    \n};\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func,\n};","\nimport { Container } from \"../Home/Home.styled\";\nimport { MovieList } from \"../MovieList/MovieList\";\n//import { MovieDetails } from \"../MovieDetails/MovieDetails\";\nimport { Searchbar } from \"components/Searchbar/Searchbar.jsx\";\nimport { useState, useEffect } from 'react';\nimport { getMovies } from '../MoviessAPI/MoviesAPI.js';\nimport { useSearchParams } from \"react-router-dom\";\nimport { Loader } from '../Loader/Loader.jsx';\n\n\nconst Movies = () => {\n   \n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const movieName = searchParams.get(\"query\") ?? \"\";\n   \n\n    useEffect( () => {\n        \n        const getsearchMovie = async () => {\n           \n        try{\n            setIsLoading(true);\n            setError(null);\n           \n            const data = await getMovies('search', '', `query=${movieName}&`);\n            \n            if(data)\n                setMovies(data.results);\n            else return;\n           \n        }catch(error){\n            setError(error.message);\n            console.log(error)\n        }finally{\n            setIsLoading(false);\n        }\n        \n    }\n    \n    if(movieName.length > 0) {\n        getsearchMovie();\n    }\n   \n}, [movieName] );\n\n\n\nconst onSubmit = (query) => {\n\n    const nextParams = query !== \"\" ? { query } : {};\n    setSearchParams(nextParams);\n    \n  }\n\n    return (\n       <div>\n            <Container>\n                <Searchbar value={movieName} onSubmit={onSubmit}/>\n                {movies.length > 0 && <MovieList movies={movies} />}\n                {isLoading && <Loader />}\n                {error && <p>{error}</p>}\n            </Container>\n       </div> \n    )\n    \n}\nexport default Movies;","import axios from 'axios';\n\n//const API_KEY = 'api_key=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjdjNzk5ZDVlZDcwNzgyZGY1MTJiNTExNTRjMTg4NSIsInN1YiI6IjY0OTdjNzMzNjJmMzM1MDBjYTQzODYwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nPeSofqctbcrTN-4r6SV8I78cs_JotRjk-M6zn_va2I';\nconst API_KEY = 'api_key=db7c799d5ed70782df512b51154c1885';\n//db7c799d5ed70782df512b51154c1885\nconst URL = 'https://api.themoviedb.org/3/';\nconst options = {\n    home: 'trending/all/day',\n    movie: 'movie/',\n    search: \"search/movie\",\n    \n}\n\nexport const getMovies = async (val, param='', query='') => {\n    const response = await axios.get(`${URL}${options[val]}${param}?${query}${API_KEY}`);\n   \n    return response.data;\n}"],"names":["MovieList","movies","location","useLocation","map","id","title","name","to","state","from","SearchFormBtn","styled","SearchForm","Form","SearchFormInput","Field","initialValues","query","schema","yup","shape","required","Searchbar","value","onSubmit","validationSchema","values","type","placeholder","size","component","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getsearchMovie","getMovies","data","results","message","console","log","length","Loader","API_KEY","URL","options","home","movie","search","val","param","axios","response"],"sourceRoot":""}
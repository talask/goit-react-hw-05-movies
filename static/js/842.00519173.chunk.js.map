{"version":3,"file":"static/js/842.00519173.chunk.js","mappings":"oPAgDA,UA1Ca,WACT,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAW,WAEP,IAAMC,EAAkB,mCAAG,oGAEnBJ,GAAa,GACbE,EAAS,MAHU,UAIAG,EAAAA,EAAAA,GAAU,QAJV,QAIbC,EAJa,QAMXC,QAAQC,OAAS,EACrBV,EAAUQ,EAAKC,SAEfE,MAAM,wBATS,gDAYnBP,EAAS,KAAMQ,SACfC,QAAQC,IAAR,MAbmB,yBAenBZ,GAAa,GAfM,4EAAH,qDAmBxBI,GACH,GAAC,KAMM,UAAC,KAAD,WACKL,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAIA,IACbJ,EAAOW,OAAS,IAAK,SAAC,IAAD,CAAWX,OAAQA,MAKxD,C,wFC7CYgB,EAAY,SAAC,GAAc,IAAbhB,EAAY,EAAZA,OACjBiB,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACMlB,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SACKI,GAAgBC,KAFhBF,EADA,KAYxB,C,kGCfKM,EAAU,2CAEVC,EAAM,gCACNC,EAAU,CACZC,KAAM,mBACNC,MAAO,SACPC,OAAQ,gBAICvB,EAAS,mCAAG,WAAOwB,GAAP,8FAAYC,EAAZ,+BAAkB,GAAIC,EAAtB,+BAA4B,GAA5B,SACEC,EAAAA,EAAAA,IAAA,UAAaR,GAAb,OAAmBC,EAAQI,IAA3B,OAAkCC,EAAlC,YAA2CC,GAA3C,OAAmDR,IADrD,cACfU,EADe,yBAGdA,EAAS3B,MAHK,2CAAH,qD","sources":["components/Home/Home.jsx","components/MovieList/MovieList.jsx","components/MoviessAPI/MoviesAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container } from './Home.styled.jsx'\nimport { Loader } from '../Loader/Loader.jsx';\nimport { getMovies } from '../MoviessAPI/MoviesAPI.js';\nimport { MovieList } from '../MovieList/MovieList'\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect( () => {\n       \n        const fetchLoadingMovies = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n                const data = await getMovies('home');\n               \n                if(data.results.length > 0) {\n                    setMovies(data.results);\n                }else{\n                    alert('Ooops.. Nothing find')\n                }\n            }catch (error){\n                setError(error.message);\n                console.log(error);\n            }finally{\n                setIsLoading(false);\n            }\n       \n        }\n        fetchLoadingMovies();\n    },[]);\n\n    \n\n    return (\n        \n            <Container>\n                {isLoading && <Loader />}\n                {error && <p>{error}</p>}\n                {movies.length > 0 && <MovieList movies={movies} />}\n            </Container>\n       \n  );\n        \n}\nexport default Home;","import { Link, useLocation } from \"react-router-dom\";\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n            { movies.map(({ id, title, name }) => (\n                <li key={id} >\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                        {title ? title : name}\n                    </Link>\n                       \n                   \n                </li>\n            ))\n            }\n        </ul>\n    )\n}","import axios from 'axios';\n\n//const API_KEY = 'api_key=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjdjNzk5ZDVlZDcwNzgyZGY1MTJiNTExNTRjMTg4NSIsInN1YiI6IjY0OTdjNzMzNjJmMzM1MDBjYTQzODYwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nPeSofqctbcrTN-4r6SV8I78cs_JotRjk-M6zn_va2I';\nconst API_KEY = 'api_key=db7c799d5ed70782df512b51154c1885';\n//db7c799d5ed70782df512b51154c1885\nconst URL = 'https://api.themoviedb.org/3/';\nconst options = {\n    home: 'trending/all/day',\n    movie: 'movie/',\n    search: \"search/movie\",\n    \n}\n\nexport const getMovies = async (val, param='', query='') => {\n    const response = await axios.get(`${URL}${options[val]}${param}?${query}${API_KEY}`);\n   \n    return response.data;\n}"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchLoadingMovies","getMovies","data","results","length","alert","message","console","log","MovieList","location","useLocation","map","id","title","name","to","state","from","API_KEY","URL","options","home","movie","search","val","param","query","axios","response"],"sourceRoot":""}
{"version":3,"file":"static/js/247.a2f08b1c.chunk.js","mappings":"0OA+DA,UA1Da,WACT,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA+BR,OA5BAE,EAAAA,EAAAA,YAAW,WAEP,IAAMC,EAAO,mCAAG,oGAGRR,GAAa,GACbE,EAAS,MAJD,UAMWO,EAAAA,EAAAA,GAAU,QAAD,UAAaJ,EAAb,aANpB,YAMFK,EANE,yBASLN,EAAQM,EAAKP,MATR,4GAaRD,EAAS,KAAMS,SACfC,QAAQC,IAAR,MAdQ,yBAgBRb,GAAa,GAhBL,6EAAH,qDAsBbQ,GAEH,GAAE,CAACH,KAGA,gCACKN,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAIA,KACd,wBACCE,GAAQA,EAAKW,KAAI,YAAwC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,aAAaC,EAAoB,EAApBA,UAAUC,EAAU,EAAVA,KACvC,OACI,2BACI,gBAAKC,IAAG,6CAAwCH,GAAgBI,IAAKF,EAAMG,MAAM,WACjF,uBAAIH,KACJ,uBAAID,MAHCF,EAOX,QAOrB,C,kGC1DKO,EAAU,2CAEVC,EAAM,gCACNC,EAAU,CACZC,KAAM,mBACNC,MAAO,SACPC,OAAQ,gBAIClB,EAAS,mCAAG,WAAOmB,GAAP,8FAAYC,EAAZ,+BAAkB,GAAIC,EAAtB,+BAA4B,GAA5B,SACEC,EAAAA,EAAAA,IAAA,UAAaR,GAAb,OAAmBC,EAAQI,IAA3B,OAAkCC,EAAlC,YAA2CC,GAA3C,OAAmDR,IADrD,cACfU,EADe,yBAGdA,EAAStB,MAHK,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/MoviessAPI/MoviesAPI.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovies } from '../MoviessAPI/MoviesAPI.js';\nimport { Loader } from '../Loader/Loader.jsx';\n\nconst Cast = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();  \n\n\n    useEffect( () => {\n       \n        const getCast = async () => {\n            \n            try{\n                setIsLoading(true);\n                setError(null);\n    \n                const data = await getMovies('movie', `${movieId}/credits`);\n                \n                if(data)\n                   setCast(data.cast);\n                else return;\n               \n            }catch(error){\n                setError(error.message);\n                console.log(error)\n            }finally{\n                setIsLoading(false);\n            }\n            \n            \n        }\n        \n        getCast();\n       \n    }, [movieId] );\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {error && <p>{error}</p>}\n            <ul>\n            {cast && cast.map(({id, profile_path,character,name}) => {\n                    return (\n                        <li key={id}>\n                            <img src={`https://image.tmdb.org/t/p/original${profile_path}`} alt={name} width=\"150px\"/>\n                            <p>{name}</p>\n                            <p>{character}</p>\n                            \n                        </li>\n                    \n                    )})\n                }\n            </ul>\n        </>\n        \n    )\n \n}\n\nexport default Cast;","import axios from 'axios';\n\n//const API_KEY = 'api_key=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjdjNzk5ZDVlZDcwNzgyZGY1MTJiNTExNTRjMTg4NSIsInN1YiI6IjY0OTdjNzMzNjJmMzM1MDBjYTQzODYwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nPeSofqctbcrTN-4r6SV8I78cs_JotRjk-M6zn_va2I';\nconst API_KEY = 'api_key=db7c799d5ed70782df512b51154c1885';\n//db7c799d5ed70782df512b51154c1885\nconst URL = 'https://api.themoviedb.org/3/';\nconst options = {\n    home: 'trending/all/day',\n    movie: 'movie/',\n    search: \"search/movie\",\n    \n}\n\nexport const getMovies = async (val, param='', query='') => {\n    const response = await axios.get(`${URL}${options[val]}${param}?${query}${API_KEY}`);\n   \n    return response.data;\n}"],"names":["useState","isLoading","setIsLoading","error","setError","cast","setCast","movieId","useParams","useEffect","getCast","getMovies","data","message","console","log","map","id","profile_path","character","name","src","alt","width","API_KEY","URL","options","home","movie","search","val","param","query","axios","response"],"sourceRoot":""}
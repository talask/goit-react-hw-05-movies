{"version":3,"file":"static/js/353.be06c2ef.chunk.js","mappings":"6RAEaA,EAAUC,EAAAA,GAAAA,IAAH,4CAIPC,EAAUD,EAAAA,GAAAA,IAAH,mE,SCqFpB,EApFqB,WAAO,IAAD,IAEjBE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEDE,EAAuDN,EAAvDM,OAAOC,EAAgDP,EAAhDO,MAAOC,EAAyCR,EAAzCQ,SAASC,EAAgCT,EAAhCS,aAAeC,EAAiBV,EAAjBU,YA8B7C,OA5BAC,EAAAA,EAAAA,YAAW,WAEP,IAAMC,EAAY,mCAAG,oGAIjBT,EAAS,MAJQ,UAMEU,EAAAA,EAAAA,GAAU,QAAST,GANrB,YAMXU,EANW,wBASbb,EAASa,GATI,2GAajBX,EAAS,KAAMY,SACfC,QAAQC,IAAR,MAdiB,0DAAH,qDAoBnBb,GACHQ,GAEH,GAAE,CAACR,KAII,gCAEKF,IAAS,uBAAIA,IAGVE,IACD,iCACH,wBACI,SAAC,KAAD,CAAMc,GAAIvB,EAAV,SAAwB,sBAG5B,UAACH,EAAD,YAEI,gBAAK2B,IAAG,6CAAwCT,GAAeU,IAAKb,EAAOc,MAAM,WACjF,UAAC3B,EAAD,YACI,wBAAKa,KACL,yBAAG,eAA0B,GAAbE,EAAgB,QAChC,wBAAI,cACJ,uBAAID,KACJ,wBAAI,YAEJ,uBAAIF,GAAUA,EAAOgB,KAAI,qBAAEC,IAAF,IAAkBC,KAAK,cAGxD,4BACI,wBAAI,2BACJ,2BACI,yBACQ,SAAC,KAAD,CAAMN,GAAG,OAAQrB,MAAO,CAAEC,KAAMH,GAAhC,SAAgD,UADhD,SAGJ,yBACI,SAAC,KAAD,CAAMuB,GAAG,UAAUrB,MAAO,CAAEC,KAAMH,GAAlC,SAAkD,aAD9C,eAOR,SAAC,KAAD,YAOvB,C,kGCtFK8B,EAAU,2CAEVC,EAAM,gCACNC,EAAU,CACZC,KAAM,mBACN5B,MAAO,SACP6B,OAAQ,gBAIChB,EAAS,mCAAG,WAAOiB,GAAP,8FAAYC,EAAZ,+BAAkB,GAAIC,EAAtB,+BAA4B,GAA5B,SACEC,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAmBC,EAAQG,IAA3B,OAAkCC,EAAlC,YAA2CC,GAA3C,OAAmDP,IADrD,cACfS,EADe,yBAGdA,EAASpB,MAHK,2CAAH,qD","sources":["components/MovieDetails/Movie.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/MoviessAPI/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Details = styled.div`\n    display: flex;\n`;\n\nexport const Wrapper = styled.div`\n    margin-left: 30px;\n    width: 400px;\n`;","import { useParams, Link, useLocation, Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovies } from '../MoviessAPI/MoviesAPI.js';\n\nimport { Details, Wrapper } from \"./Movie.styled.jsx\";\n\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    const [movie, setMovie] = useState({}); \n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n    const{ genres,title, overview,vote_average,  poster_path, } = movie;\n   \n    useEffect( () => {\n       \n        const getMovieToId = async () => {\n        \n        try{\n           \n            setError(null);\n\n            const data = await getMovies('movie', movieId);\n           \n            if(data)\n                setMovie(data);\n            else return;\n           \n        }catch(error){\n            setError(error.message);\n            console.log(error)\n        }\n        \n        \n    }\n   \n    if(movieId)\n    getMovieToId();\n   \n}, [movieId] );\n    \n\n    return (\n        <>\n            \n            {error && <p>{error}</p>}\n           \n            {\n                movieId \n            && <>\n            <p>\n                <Link to={backLinkHref}>Back to movies</Link>\n            </p>\n                 \n            <Details>\n            \n                <img src={`https://image.tmdb.org/t/p/original${poster_path}`} alt={title} width=\"350px\"/>\n                <Wrapper>\n                    <h2>{title}</h2>\n                    <p>User Score: {vote_average*10}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    \n                    <p>{genres && genres.map(({name}) => name).join(\" \")}</p>\n                </Wrapper>\n            </Details>\n            <div>\n                <h3>Aditional Information</h3>\n                <ul>\n                    <li key=\"cast\">\n                            <Link to=\"cast\"  state={{ from: backLinkHref }}>Cast</Link>\n                        </li>\n                        <li key=\"reviews\">\n                            <Link to=\"reviews\" state={{ from: backLinkHref }}>Reviews</Link>\n                        </li>\n                        \n                        \n                    </ul>\n                   \n                        <Outlet />\n                    \n            </div> \n            </>\n            }\n        </>\n    )\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\n//const API_KEY = 'api_key=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjdjNzk5ZDVlZDcwNzgyZGY1MTJiNTExNTRjMTg4NSIsInN1YiI6IjY0OTdjNzMzNjJmMzM1MDBjYTQzODYwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nPeSofqctbcrTN-4r6SV8I78cs_JotRjk-M6zn_va2I';\nconst API_KEY = 'api_key=db7c799d5ed70782df512b51154c1885';\n//db7c799d5ed70782df512b51154c1885\nconst URL = 'https://api.themoviedb.org/3/';\nconst options = {\n    home: 'trending/all/day',\n    movie: 'movie/',\n    search: \"search/movie\",\n    \n}\n\nexport const getMovies = async (val, param='', query='') => {\n    const response = await axios.get(`${URL}${options[val]}${param}?${query}${API_KEY}`);\n   \n    return response.data;\n}"],"names":["Details","styled","Wrapper","backLinkHref","useLocation","state","from","useState","movie","setMovie","error","setError","movieId","useParams","genres","title","overview","vote_average","poster_path","useEffect","getMovieToId","getMovies","data","message","console","log","to","src","alt","width","map","name","join","API_KEY","URL","options","home","search","val","param","query","axios","response"],"sourceRoot":""}